Part 1.
1. What git command creates a branch?
git branch NEW_BRANCH_NAME
2. What is the difference between a fast-forward and a recursive merge?
"Fast-forward" implies that the merging of the two branches has no conflicts.
"Recursive" merges (also called three-way merges) occur when changes in the branch being merged conflict with changes in the main branch. Git creates a new commit that combines the changes from both branches.
3. What git command changes to another branch?
git checkout ANOTHER_BRANCH_NAME
4. What git command deletes a branch?
git branch -d BRANCH_NAME_TO_DELETE
5. How do merge conflicts happen?
This happens when changes in one branch conflict with changes in another branch when they come together. Git will mark the conflicts and prompt the user to resolve the issues.

Part 2.
1. Show a string of commands starting from the making of the working directory culminating with a fast forward merge.

# Create a new working directory and navigate to it
mkdir my-project
cd my-project

# Initialize a new Git repository
git init

# Create and add some files to the working directory
touch file1.txt file2.txt
git add .

# Commit the changes to the main branch
git commit -m "Initial commit"

# Create a new branch for feature development
git branch feature-branch

# Switch to the feature branch
git checkout feature-branch

# Make some changes to the files in the feature branch
echo "This is some new content" > file1.txt
git add file1.txt
git commit -m "Added new content to file1"

# Switch back to the main branch
git checkout main

#point of divergence for next question

# Merge the changes from the feature branch into main using a fast-forward merge
git merge feature-branch


2. Proceed from the last position in the previous question and try to cause a recursive merge conflict.

# Make some conflicting changes to the same file in the main branch
echo "This is some conflicting content" > file1.txt
git add file1.txt
git commit -m "Added conflicting content to file1"

# Merge the changes from the feature branch into main using a recursive merge
git merge feature-branch